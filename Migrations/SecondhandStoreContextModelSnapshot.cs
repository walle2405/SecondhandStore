// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondhandStore.Infrastructure;

#nullable disable

namespace SecondhandStore.Migrations
{
    [DbContext(typeof(SecondhandStoreContext))]
    partial class SecondhandStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SecondhandStore.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("accountId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullname");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("char(64)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNo");

                    b.Property<int>("PointBalance")
                        .HasColumnType("int")
                        .HasColumnName("pointBalance");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("roleId");

                    b.Property<double>("UserRatingScore")
                        .HasColumnType("float")
                        .HasColumnName("userRatingScore");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("categoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.ExchangeOrder", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<string>("BuyerEmail")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("receiverEmail");

                    b.Property<string>("BuyerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("receiverId");

                    b.Property<string>("BuyerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("receiverPhoneNumber");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("orderDate");

                    b.Property<bool>("OrderStatus")
                        .HasColumnType("bit")
                        .HasColumnName("orderStatus");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("accountID");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__Exchange__E4FEDE4A0591CCC7");

                    b.HasIndex("BuyerId");

                    b.HasIndex("PostId");

                    b.HasIndex("SellerId");

                    b.ToTable("ExchangeOrder", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.ExchangeRequest", b =>
                {
                    b.Property<int>("RequestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("requestDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestDetailId"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("orderDate");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<string>("SellerEmail")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sellerEmail");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sellerId");

                    b.Property<string>("SellerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sellerPhoneNumber");

                    b.HasKey("RequestDetailId")
                        .HasName("PK__Exchange__6FB55063FA6005F9");

                    b.HasIndex("PostId");

                    b.HasIndex("SellerId");

                    b.ToTable("ExchangeRequest", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("permissionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"), 1L, 1);

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("permissionName");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("roleId");

                    b.HasKey("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("accountId");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("image");

                    b.Property<int>("PointCost")
                        .HasColumnType("int")
                        .HasColumnName("pointCost");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("date")
                        .HasColumnName("postDate");

                    b.Property<DateTime>("PostExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("postExpiryDate");

                    b.Property<int>("PostPriority")
                        .HasColumnType("int")
                        .HasColumnName("postPriority");

                    b.Property<bool>("PostStatus")
                        .HasColumnType("bit")
                        .HasColumnName("postStatus");

                    b.Property<string>("PostType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("postType");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("productName");

                    b.HasKey("PostId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reportId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"), 1L, 1);

                    b.Property<string>("Evidence1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("evidence1");

                    b.Property<string>("Evidence2")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("evidence2");

                    b.Property<string>("Evidence3")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("evidence3");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("reason");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("date")
                        .HasColumnName("reportDate");

                    b.Property<string>("ReportedAccountId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("reportedAccountId");

                    b.HasKey("ReportId");

                    b.HasIndex("ReportedAccountId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reviewId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("content");

                    b.Property<string>("FeedbackUserId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("feedbackUserId");

                    b.Property<string>("FeedbackUsername")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("feedbackUsername");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<int>("StarRating")
                        .HasColumnType("int")
                        .HasColumnName("starRating");

                    b.HasKey("ReviewId");

                    b.HasIndex("FeedbackUserId");

                    b.HasIndex("PostId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("roleId");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("roleName");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.TopUp", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("accountId");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<DateTime>("TopUpDate")
                        .HasColumnType("date")
                        .HasColumnName("topUpDate");

                    b.Property<int>("TopUpPoint")
                        .HasColumnType("int")
                        .HasColumnName("topUpPoint");

                    b.HasKey("OrderId")
                        .HasName("PK__TopUp__0809335D46A767E4");

                    b.HasIndex("AccountId");

                    b.ToTable("TopUp", (string)null);
                });

            modelBuilder.Entity("SecondhandStore.Models.Account", b =>
                {
                    b.HasOne("SecondhandStore.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SecondhandStore.Models.ExchangeOrder", b =>
                {
                    b.HasOne("SecondhandStore.Models.Account", "Buyer")
                        .WithMany("ExchangeOrderReceivers")
                        .HasForeignKey("BuyerId")
                        .IsRequired()
                        .HasConstraintName("FK__ExchangeO__recei__33D4B598");

                    b.HasOne("SecondhandStore.Models.Post", "Post")
                        .WithMany("ExchangeOrders")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__ExchangeO__postI__35BCFE0A");

                    b.HasOne("SecondhandStore.Models.Account", "Seller")
                        .WithMany("ExchangeOrderAccounts")
                        .HasForeignKey("SellerId")
                        .IsRequired()
                        .HasConstraintName("FK__ExchangeO__accou__34C8D9D1");

                    b.Navigation("Buyer");

                    b.Navigation("Post");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SecondhandStore.Models.ExchangeRequest", b =>
                {
                    b.HasOne("SecondhandStore.Models.Post", "Post")
                        .WithMany("ExchangeRequests")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__ExchangeR__postI__398D8EEE");

                    b.HasOne("SecondhandStore.Models.Account", "Seller")
                        .WithMany("ExchangeRequests")
                        .HasForeignKey("SellerId")
                        .IsRequired()
                        .HasConstraintName("FK__ExchangeR__selle__38996AB5");

                    b.Navigation("Post");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("SecondhandStore.Models.Permission", b =>
                {
                    b.HasOne("SecondhandStore.Models.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Permissio__roleI__2E1BDC42");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SecondhandStore.Models.Post", b =>
                {
                    b.HasOne("SecondhandStore.Models.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__accountId__286302EC");

                    b.HasOne("SecondhandStore.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__categoryId__29572725");

                    b.Navigation("Account");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SecondhandStore.Models.Report", b =>
                {
                    b.HasOne("SecondhandStore.Models.Account", "ReportedAccount")
                        .WithMany("Reports")
                        .HasForeignKey("ReportedAccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Report__reported__403A8C7D");

                    b.Navigation("ReportedAccount");
                });

            modelBuilder.Entity("SecondhandStore.Models.Review", b =>
                {
                    b.HasOne("SecondhandStore.Models.Account", "FeedbackUser")
                        .WithMany("Reviews")
                        .HasForeignKey("FeedbackUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__feedback__3D5E1FD2");

                    b.HasOne("SecondhandStore.Models.Post", "Post")
                        .WithMany("Reviews")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__postId__3C69FB99");

                    b.Navigation("FeedbackUser");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SecondhandStore.Models.TopUp", b =>
                {
                    b.HasOne("SecondhandStore.Models.Account", "Account")
                        .WithMany("TopUps")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__TopUp__accountId__30F848ED");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SecondhandStore.Models.Account", b =>
                {
                    b.Navigation("ExchangeOrderAccounts");

                    b.Navigation("ExchangeOrderReceivers");

                    b.Navigation("ExchangeRequests");

                    b.Navigation("Posts");

                    b.Navigation("Reports");

                    b.Navigation("Reviews");

                    b.Navigation("TopUps");
                });

            modelBuilder.Entity("SecondhandStore.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("SecondhandStore.Models.Post", b =>
                {
                    b.Navigation("ExchangeOrders");

                    b.Navigation("ExchangeRequests");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SecondhandStore.Models.Role", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
